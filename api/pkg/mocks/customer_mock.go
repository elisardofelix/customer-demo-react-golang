// Code generated by MockGen. DO NOT EDIT.
// Source: customer.go

// Package mocks is a generated GoMock package.
package mocks

import (
	models "customer-demo/pkg/models"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockCustomerProvider is a mock of CustomerProvider interface.
type MockCustomerProvider struct {
	ctrl     *gomock.Controller
	recorder *MockCustomerProviderMockRecorder
}

// MockCustomerProviderMockRecorder is the mock recorder for MockCustomerProvider.
type MockCustomerProviderMockRecorder struct {
	mock *MockCustomerProvider
}

// NewMockCustomerProvider creates a new mock instance.
func NewMockCustomerProvider(ctrl *gomock.Controller) *MockCustomerProvider {
	mock := &MockCustomerProvider{ctrl: ctrl}
	mock.recorder = &MockCustomerProviderMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockCustomerProvider) EXPECT() *MockCustomerProviderMockRecorder {
	return m.recorder
}

// GetAll mocks base method.
func (m *MockCustomerProvider) GetAll() ([]*models.Customer, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAll")
	ret0, _ := ret[0].([]*models.Customer)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetAll indicates an expected call of GetAll.
func (mr *MockCustomerProviderMockRecorder) GetAll() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAll", reflect.TypeOf((*MockCustomerProvider)(nil).GetAll))
}

// GetById mocks base method.
func (m *MockCustomerProvider) GetById(id int) (*models.Customer, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetById", id)
	ret0, _ := ret[0].(*models.Customer)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetById indicates an expected call of GetById.
func (mr *MockCustomerProviderMockRecorder) GetById(id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetById", reflect.TypeOf((*MockCustomerProvider)(nil).GetById), id)
}
